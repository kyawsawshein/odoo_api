version: '3.8'

services:
  # FastAPI Application
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://odoo:admin@db:5432/odoo_api
      # - REDIS_URL=redis://redis:6379/0
      - ODOO_URL=${ODOO_URL}
      # - ODOO_DATABASE=${ODOO_DATABASE}
      # - ODOO_USERNAME=${ODOO_USERNAME}
      # - ODOO_PASSWORD=${ODOO_PASSWORD}
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
    # depends_on:
      # - postgres
      # - redis
      # - kafka
    volumes:
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - odoo19_odoo19-net

  # PostgreSQL Database
  # postgres:
  #   image: postgres:15
  #   environment:
  #     - POSTGRES_DB=odoo_api
  #     - POSTGRES_USER=odoo_api_user
  #     - POSTGRES_PASSWORD=odoo_api_password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U odoo_api_user -d odoo_api"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - odoo19_odoo19-net

  # # Kafka
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.4.0
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - "2181:2181"

  # kafka:
  #   image: confluentinc/cp-kafka:7.4.0
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   healthcheck:
  #     test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # # Kafka Consumer Worker
  # kafka-consumer:
  #   build: .
  #   environment:
  #     - DATABASE_URL=${DATABASE_URL}
  #     - REDIS_URL=${REDIS_URL}
  #     - ODOO_URL=http://odoo:8090
  #     - ODOO_DATABASE=${ODOO_DATABASE}
  #     - ODOO_USERNAME=${ODOO_USERNAME}
  #     - ODOO_PASSWORD=${ODOO_PASSWORD}
  #     - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
  #     - KAFKA_GROUP_ID=${KAFKA_GROUP_ID}
  #   depends_on:
  #     # - postgres
  #     - redis
  #     - kafka
  #   volumes:
  #     - .:/app
  #   command: python -m app.kafka.consumer_worker

volumes:
  # postgres_data:
  redis_data:

networks:
  odoo19_odoo19-net:
    external: true
